{"version":3,"file":"static/js/786.bb2b55a7.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/AuthNavigate/AuthNavigate.module.css?2dbf","components/AuthNavigate/AuthNavigate.jsx","webpack://react-team-project/./src/components/Buttons/AuthBtn/AuthBtn.module.css?1c8f","components/Buttons/AuthBtn/AuthBtn.jsx","components/Forms/RegisterForm/registerFormValidation.js","components/Forms/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","webpack://react-team-project/./src/components/Forms/RegisterForm/RegisterForm.module.css?aa5d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"AuthNavigate_navlink__pwLbA\"};","import css from './AuthNavigate.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNavigate({ formType }) {\n  const fillRout = formType === 'register' ? '/login' : '/register';\n  const fillContent = formType === 'register' ? 'Log In' : 'Sign up';\n\n  return (\n    <NavLink className={css.navlink} to={fillRout}>\n      {fillContent}\n    </NavLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AuthBtn_button__TD255\",\"icon\":\"AuthBtn_icon__ah2ei\"};","import css from \"./AuthBtn.module.css\"\n\nexport default function AuthBtn({title, icon}) {\n  return (\n    <button className={css.button} type=\"submit\">\n      {title}\n      <svg className={css.icon}>\n        <use href={icon} />\n      </svg>\n    </button>\n  );\n}\n","import { object, string } from 'yup';\n\nconst registerSchema = object().shape({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(36, 'Too Long!')\n    .required('Required!'),\n  email: string().email('This is an ERROR email').required('Required!'),\n  password: string()\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .matches(/[^\\w]/, 'Password requires a symbol')\n    .required('Required!'),\n});\n\nexport default registerSchema;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { register } from '../../../redux/auth/authOperations';\nimport registerSchema from './registerFormValidation';\nimport css from './RegisterForm.module.css';\nimport icons from '../../../img/icons.svg';\nimport AuthNavigate from '../../AuthNavigate/AuthNavigate';\nimport AuthBtn from '../../Buttons/AuthBtn/AuthBtn';\nimport { useNavigate } from 'react-router-dom';\n// from react-icons\nimport {\n  AiFillEye,\n  AiFillEyeInvisible,\n  AiOutlineCheckCircle,\n  AiOutlineExclamationCircle,\n} from 'react-icons/ai';\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [type, setType] = useState('password');\n  const [icon, setIcon] = useState(<AiFillEyeInvisible />);\n\n  const handleShowPassword = () => {\n    if (type === 'password') {\n      setIcon(<AiFillEye />);\n      setType('text');\n    } else {\n      setIcon(<AiFillEyeInvisible />);\n      setType('password');\n    }\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      const response = await dispatch(register(values));\n      console.log('Registration successful:', response);\n      await navigate('/user/calendar');\n      resetForm();\n    } catch (error) {\n      console.error('Registration rejected:', error);\n    }\n  };\n\n  return (\n    <>\n      <div className={css.container}>\n        <div className={css.bgImages}></div>\n        <div className={css.bgImagesMsg}>\n          <p className={css.bgImagesText}>\n            Quickly <span className={css.span}>register</span> and familiarize\n            yourself with the application!\n          </p>\n        </div>\n        <Formik\n          const\n          initialValues={INITIAL_STATE}\n          validationSchema={registerSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form autoComplete=\"off\" className={css.form}>\n              <h1 className={css.title}>Sign Up</h1>\n              <label\n                className={\n                  errors.name && touched.name\n                    ? css.isInvalidLabel\n                    : touched.name\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                <p className={css.labelText}>Name</p>\n                <Field\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"name\"\n                  placeholder=\"Enter your name\"\n                  className={\n                    errors.name && touched.name\n                      ? css.isInvalid\n                      : touched.name\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n              <label\n                className={\n                  errors.email && touched.email\n                    ? css.isInvalidLabel\n                    : touched.email\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                <p className={css.labelText}>Email</p>\n                <Field\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  className={\n                    errors.email && touched.email\n                      ? css.isInvalid\n                      : touched.email\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                {touched.email && (\n                  <span className={css.validationIcon}>\n                    {errors.email ? (\n                      <AiOutlineExclamationCircle className={css.invalidIcon} />\n                    ) : (\n                      <AiOutlineCheckCircle className={css.validIcon} />\n                    )}\n                  </span>\n                )}\n                <div className={css.feedback}>\n                  {touched.email && !errors.email ? (\n                    <div className={css.validFeedback}>\n                      This is an CORRECT email\n                    </div>\n                  ) : (\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className={css.invalidFeedback}\n                    ></ErrorMessage>\n                  )}\n                </div>\n              </label>\n              <label\n                className={\n                  errors.password && touched.password\n                    ? css.isInvalidLabel\n                    : touched.password\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                <p className={css.labelText}>Password</p>\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type={type}\n                  placeholder=\"Enter password\"\n                  className={\n                    errors.password && touched.password\n                      ? css.isInvalid\n                      : touched.password\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <button\n                  className={css.btnToggle}\n                  type=\"button\"\n                  onClick={handleShowPassword}\n                >\n                  <div className={css.spanIcon}>{icon}</div>\n                </button>\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n              <AuthBtn title={'Sign Up'} icon={`${icons}#log-in-01`} />\n            </Form>\n          )}\n        </Formik>\n        <AuthNavigate formType=\"register\" />\n      </div>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/Forms/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__Xyyo6\",\"form\":\"RegisterForm_form__Q5Jhf\",\"title\":\"RegisterForm_title__GYy4A\",\"label\":\"RegisterForm_label__oS2A1\",\"input\":\"RegisterForm_input__ri5a0\",\"bgImages\":\"RegisterForm_bgImages__k30sU\",\"bgimages\":\"RegisterForm_bgimages__J91Fr\",\"bgImagesMsg\":\"RegisterForm_bgImagesMsg__RE-a5\",\"bgImagesText\":\"RegisterForm_bgImagesText__6+zb7\",\"span\":\"RegisterForm_span__AeXsn\",\"spanIcon\":\"RegisterForm_spanIcon__yiKzN\",\"labelText\":\"RegisterForm_labelText__LNKe7\",\"feedback\":\"RegisterForm_feedback__eMOAQ\",\"invalidFeedback\":\"RegisterForm_invalidFeedback__R8sfQ\",\"validFeedback\":\"RegisterForm_validFeedback__G7iC1\",\"isInvalidLabel\":\"RegisterForm_isInvalidLabel__iuJAM\",\"isValidLabel\":\"RegisterForm_isValidLabel__YKGHl\",\"isValid\":\"RegisterForm_isValid__pk6z3\",\"isInvalid\":\"RegisterForm_isInvalid__VxQrK\",\"validationIcon\":\"RegisterForm_validationIcon__B2CxV\",\"validIcon\":\"RegisterForm_validIcon__sLsPJ\",\"invalidIcon\":\"RegisterForm_invalidIcon__c+hns\",\"btnToggle\":\"RegisterForm_btnToggle__ayAHo\"};"],"names":["AuthNavigate","_ref","formType","fillRout","fillContent","_jsx","NavLink","className","css","to","children","AuthBtn","title","icon","_jsxs","type","href","object","shape","name","string","min","max","required","email","password","matches","INITIAL_STATE","RegisterForm","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","setType","_useState3","AiFillEyeInvisible","_useState4","setIcon","handleShowPassword","AiFillEye","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","wrap","_context","prev","next","register","sent","console","log","t0","error","stop","_x","_x2","apply","arguments","_Fragment","Formik","const","initialValues","validationSchema","registerSchema","onSubmit","_ref3","errors","touched","Form","autoComplete","Field","id","placeholder","ErrorMessage","component","AiOutlineExclamationCircle","AiOutlineCheckCircle","onClick","concat","icons","RegisterPage"],"sourceRoot":""}