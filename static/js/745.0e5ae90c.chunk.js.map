{"version":3,"file":"static/js/745.0e5ae90c.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/AuthNavigate/AuthNavigate.module.css?2dbf","components/AuthNavigate/AuthNavigate.jsx","webpack://react-team-project/./src/components/Buttons/AuthBtn/AuthBtn.module.css?1c8f","components/Buttons/AuthBtn/AuthBtn.jsx","components/Forms/LoginForm/loginFormValidation.js","webpack://react-team-project/./src/components/Forms/LoginForm/LoginForm.module.css?b871","components/Forms/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","webpack://react-team-project/./src/components/Forms/RegisterForm/RegisterForm.module.css?aa5d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"AuthNavigate_navlink__pwLbA\"};","import css from './AuthNavigate.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNavigate({ formType }) {\n  const fillRout = formType === 'register' ? '/login' : '/register';\n  const fillContent = formType === 'register' ? 'Log In' : 'Sign up';\n\n  return (\n    <NavLink className={css.navlink} to={fillRout}>\n      {fillContent}\n    </NavLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AuthBtn_button__TD255\",\"icon\":\"AuthBtn_icon__ah2ei\"};","import css from \"./AuthBtn.module.css\"\n\nexport default function AuthBtn({title, icon}) {\n  return (\n    <button className={css.button} type=\"submit\">\n      {title}\n      <svg className={css.icon}>\n        <use href={icon} />\n      </svg>\n    </button>\n  );\n}\n","import { object, string } from 'yup';\n\nconst loginSchema = object().shape({\n  email: string()\n    .email('This is an ERROR email')\n    .matches(/^[a-zA-Z0-9@.]+$/, 'Email must contain only Latin characters')\n    .required('Email is required'),\n  password: string()\n    .required('Password is required')\n    .min(8, 'Password must be at least 8 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport default loginSchema;\n","// extracted by mini-css-extract-plugin\nexport default {\"logIn\":\"LoginForm_logIn__JGX1M\",\"iconError\":\"LoginForm_iconError__6HPVa\",\"iconOk\":\"LoginForm_iconOk__akNVL\",\"error_message\":\"LoginForm_error_message__cLSIU\",\"success_message\":\"LoginForm_success_message__YvkmU\",\"button_google\":\"LoginForm_button_google__o-aCw\",\"button\":\"LoginForm_button__jf+Ww\",\"bgimages\":\"LoginForm_bgimages__giGbD\"};","// import { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport loginSchema from './loginFormValidation';\nimport css from '../RegisterForm/RegisterForm.module.css';\nimport css2 from './LoginForm.module.css';\nimport AuthNavigate from '../../AuthNavigate/AuthNavigate';\nimport AuthBtn from '../../Buttons/AuthBtn/AuthBtn';\nimport icons from '../../../img/icons.svg';\nimport { logIn } from 'redux/auth/authOperations';\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [type, setType] = useState('password');\n  const [icon, setIcon] = useState(<AiFillEyeInvisible />);\n\n  const handleShowPassword = () => {\n    if (type === 'password') {\n      setIcon(<AiFillEye />);\n      setType('text');\n    } else {\n      setIcon(<AiFillEyeInvisible />);\n      setType('password');\n    }\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      const response = await dispatch(logIn(values));\n      console.log('Login successful:', response);\n      await navigate('/user/calendar');\n      resetForm();\n    } catch (error) {\n      console.error('Login rejected:', error);\n    }\n  };\n\n  return (\n    <>\n      <div className={css.container}>\n        <div className={css2.bgimages}></div>\n\n        <Formik\n          const\n          initialValues={INITIAL_STATE}\n          validationSchema={loginSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, errors, touched }) => (\n            <Form autoComplete=\"off\" className={css.form}>\n              <h1 className={css.title}>Log In</h1>\n\n              <label\n                className={\n                  errors.email && touched.email\n                    ? css.isInvalidLabel\n                    : touched.email\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                Email\n                <Field\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"nadiia@gmail.com\"\n                  value={values.email}\n                  className={\n                    errors.email && touched.email\n                      ? css.isInvalid\n                      : touched.email\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <div className={css.feedback}>\n                  {touched.email && !errors.email ? (\n                    <div className={css.validFeedback}>\n                      This is an CORRECT email\n                    </div>\n                  ) : (\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className={css.invalidFeedback}\n                    ></ErrorMessage>\n                  )}\n                </div>\n              </label>\n              <label\n                className={\n                  errors.password && touched.password\n                    ? css.isInvalidLabel\n                    : touched.password\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                Password\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type={type}\n                  placeholder=\"Enter password\"\n                  className={\n                    errors.password && touched.password\n                      ? css.isInvalid\n                      : touched.password\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <button\n                  className={css.btnToggle}\n                  type=\"button\"\n                  onClick={handleShowPassword}\n                >\n                  <div className={css.spanIcon}>{icon}</div>\n                </button>\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n\n              <AuthBtn title={'Log In'} icon={`${icons}#log-in-01`} />\n            </Form>\n          )}\n        </Formik>\n        <AuthNavigate formType=\"login\" />\n      </div>\n    </>\n  );\n};\n","import  {LoginForm}  from 'components/Forms/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__Xyyo6\",\"form\":\"RegisterForm_form__Q5Jhf\",\"title\":\"RegisterForm_title__GYy4A\",\"label\":\"RegisterForm_label__oS2A1\",\"input\":\"RegisterForm_input__ri5a0\",\"bgImages\":\"RegisterForm_bgImages__k30sU\",\"bgimages\":\"RegisterForm_bgimages__J91Fr\",\"bgImagesMsg\":\"RegisterForm_bgImagesMsg__RE-a5\",\"bgImagesText\":\"RegisterForm_bgImagesText__6+zb7\",\"span\":\"RegisterForm_span__AeXsn\",\"spanIcon\":\"RegisterForm_spanIcon__yiKzN\",\"labelText\":\"RegisterForm_labelText__LNKe7\",\"feedback\":\"RegisterForm_feedback__eMOAQ\",\"invalidFeedback\":\"RegisterForm_invalidFeedback__R8sfQ\",\"validFeedback\":\"RegisterForm_validFeedback__G7iC1\",\"isInvalidLabel\":\"RegisterForm_isInvalidLabel__iuJAM\",\"isValidLabel\":\"RegisterForm_isValidLabel__YKGHl\",\"isInvalid\":\"RegisterForm_isInvalid__VxQrK\",\"btnToggle\":\"RegisterForm_btnToggle__ayAHo\",\"isValid\":\"RegisterForm_isValid__pk6z3\"};"],"names":["AuthNavigate","formType","fillRout","fillContent","className","css","to","AuthBtn","title","icon","type","href","object","shape","email","string","matches","required","password","min","INITIAL_STATE","LoginForm","dispatch","useDispatch","navigate","useNavigate","useState","setType","setIcon","handleShowPassword","handleSubmit","values","resetForm","logIn","response","console","log","error","css2","const","initialValues","validationSchema","loginSchema","onSubmit","errors","touched","autoComplete","id","name","placeholder","value","component","onClick","icons","LoginPage"],"sourceRoot":""}