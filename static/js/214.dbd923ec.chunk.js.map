{"version":3,"file":"static/js/214.dbd923ec.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/AuthNavigate/AuthNavigate.module.css?2dbf","components/AuthNavigate/AuthNavigate.jsx","webpack://react-team-project/./src/components/Buttons/AuthBtn/AuthBtn.module.css?1c8f","components/Buttons/AuthBtn/AuthBtn.jsx","components/Forms/RegisterForm/Validation.js","components/Forms/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","webpack://react-team-project/./src/components/Forms/RegisterForm/RegisterForm.module.css?aa5d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"AuthNavigate_navlink__pwLbA\"};","import css from './AuthNavigate.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNavigate({ formType }) {\n  const fillRout = formType === 'register' ? '/login' : '/register';\n  const fillContent = formType === 'register' ? 'Log In' : 'Sign up';\n\n  return (\n    <NavLink className={css.navlink} to={fillRout}>\n      {fillContent}\n    </NavLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AuthBtn_button__TD255\",\"icon\":\"AuthBtn_icon__ah2ei\"};","import css from \"./AuthBtn.module.css\"\n\nexport default function AuthBtn({title, icon}) {\n  return (\n    <button className={css.button} type=\"submit\">\n      {title}\n      <svg className={css.icon}>\n        <use href={icon} />\n      </svg>\n    </button>\n  );\n}\n","import { object, string } from 'yup';\n\nconst registerSchema = object().shape({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(36, 'Too Long!')\n    .required('Required!'),\n  email: string().email('Invalid email!').required('Required!'),\n  password: string()\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .matches(/[^\\w]/, 'Password requires a symbol')\n    .required('Required!'),\n});\n\nexport default registerSchema;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../../redux/auth/authOperations';\nimport registerSchema from './Validation';\nimport css from './RegisterForm.module.css';\nimport icons from '../../../img/icons.svg';\nimport AuthNavigate from '../../AuthNavigate/AuthNavigate';\nimport AuthBtn from '../../Buttons/AuthBtn/AuthBtn';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleShowPassword = () => {};\n\n  const handleSubmit = e => {\n    dispatch(\n      register({\n        ...initialState\n      })\n    );\n  };\n\n  return (\n    <>\n      <div className={css.container}>\n        <div className={css.bgImages}></div>\n        <div className={css.bgImagesMsg}>\n          <p className={css.bgImagesText}>\n            Quickly <span className={css.span}>register</span> and familiarize\n            yourself with the application!\n          </p>\n        </div>\n        <Formik\n          const\n          initialValues={initialState}\n          validationSchema={registerSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched }) => (\n            <Form autoComplete=\"off\" className={css.form}>\n              <h1 className={css.title}>Sign Up</h1>\n              <label\n                className={\n                  errors.name && touched.name\n                    ? css.isInvalidLabel\n                    : touched.name\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                <p className={css.labelText}>Name</p>\n                <Field\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"name\"\n                  placeholder=\"Enter your name\"\n                  className={\n                    errors.name && touched.name\n                      ? css.isInvalid\n                      : touched.name\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n              <label\n                className={\n                  errors.email && touched.email\n                    ? css.isInvalidLabel\n                    : touched.email\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                Email\n                <Field\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  className={\n                    errors.email && touched.email\n                      ? css.isInvalid\n                      : touched.email\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n              <label\n                className={\n                  errors.password && touched.password\n                    ? css.isInvalidLabel\n                    : touched.password\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                Password\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter password\"\n                  className={\n                    errors.password && touched.password\n                      ? css.isInvalid\n                      : touched.password\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <button\n                  className={css.btnToggle}\n                  type=\"button\"\n                  onClick={handleShowPassword}\n                >\n                  <div className={css.spanIcon}>\n                    {\n                      // icon here\n                    }\n                  </div>\n                </button>\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n              <AuthBtn title={'Sign Up'} icon={`${icons}#log-in-01`} />\n            </Form>\n          )}\n        </Formik>\n        <AuthNavigate formType=\"register\" />\n      </div>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/Forms/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__Xyyo6\",\"form\":\"RegisterForm_form__Q5Jhf\",\"title\":\"RegisterForm_title__GYy4A\",\"label\":\"RegisterForm_label__oS2A1\",\"input\":\"RegisterForm_input__ri5a0\",\"bgImages\":\"RegisterForm_bgImages__k30sU\",\"bgimages\":\"RegisterForm_bgimages__J91Fr\",\"bgImagesMsg\":\"RegisterForm_bgImagesMsg__RE-a5\",\"bgImagesText\":\"RegisterForm_bgImagesText__6+zb7\",\"span\":\"RegisterForm_span__AeXsn\",\"spanIcon\":\"RegisterForm_spanIcon__yiKzN\",\"labelText\":\"RegisterForm_labelText__LNKe7\",\"feedback\":\"RegisterForm_feedback__eMOAQ\",\"invalidFeedback\":\"RegisterForm_invalidFeedback__R8sfQ\",\"isInvalidLabel\":\"RegisterForm_isInvalidLabel__iuJAM\",\"isValidLabel\":\"RegisterForm_isValidLabel__YKGHl\",\"isInvalid\":\"RegisterForm_isInvalid__VxQrK\",\"btnToggle\":\"RegisterForm_btnToggle__ayAHo\",\"isValid\":\"RegisterForm_isValid__pk6z3\"};"],"names":["AuthNavigate","formType","fillRout","fillContent","className","css","to","AuthBtn","title","icon","type","href","registerSchema","object","shape","name","string","min","max","required","email","password","matches","initialState","RegisterForm","dispatch","useDispatch","handleShowPassword","const","initialValues","validationSchema","onSubmit","e","register","errors","touched","autoComplete","id","placeholder","component","onClick","icons","RegisterPage"],"sourceRoot":""}