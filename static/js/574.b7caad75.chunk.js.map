{"version":3,"file":"static/js/574.b7caad75.chunk.js","mappings":"6JACA,MAA0B,8B,mBCEX,SAASA,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC/BC,EAAwB,aAAbD,EAA0B,SAAW,YAChDE,EAA2B,aAAbF,EAA0B,SAAW,UAEzD,OACE,SAAC,KAAD,CAASG,UAAWC,EAAaC,GAAIJ,EAArC,SACGC,GAGN,C,uDCXD,MAAyB,wBAAzB,EAAwD,sB,SCCzC,SAASI,EAAT,GAAiC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,KACtC,OACE,oBAAQL,UAAWC,EAAYK,KAAK,SAApC,UACGF,GACD,gBAAKJ,UAAWC,EAAhB,UACE,gBAAKM,KAAMF,QAIlB,C,qCCTKG,GAAiBC,EAAAA,EAAAA,MAASC,MAAM,CACpCC,MAAMC,EAAAA,EAAAA,MACHC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,aACZC,OAAOJ,EAAAA,EAAAA,MAASI,MAAM,kBAAkBD,SAAS,aACjDE,UAAUL,EAAAA,EAAAA,MACPC,IAAI,EAAG,sCACPK,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCACjBA,QAAQ,QAAS,yCACjBA,QAAQ,QAAS,8BACjBH,SAAS,eAGd,K,0HChBA,EAAgM,mCAAhM,EAAkU,4B,iDCc5TI,EAAe,CACnBH,MAAO,GACPC,SAAU,IAGCG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAqB,WAAQ,EAUnC,OACE,+BACE,iBAAKvB,UAAWC,EAAAA,EAAAA,UAAhB,WACE,gBAAKD,UAAWwB,KAEhB,SAAC,KAAD,CACEC,OAAK,EACLC,cAAeP,EACfQ,iBAAkBnB,EAAAA,EAClBoB,SAjBa,WACnBP,GACEQ,EAAAA,EAAAA,KAAM,UACDV,IAGR,EAOK,SAMG,gBAAGW,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAAnB,OACC,UAAC,KAAD,CAAMC,aAAa,MAAMjC,UAAWC,EAAAA,EAAAA,KAApC,WACE,eAAID,UAAWC,EAAAA,EAAAA,MAAf,qBAEA,mBACED,UACE+B,EAAOf,OAASgB,EAAQhB,MACpBf,EAAAA,EAAAA,eACA+B,EAAQhB,MACRf,EAAAA,EAAAA,aACAA,EAAAA,EAAAA,MANR,mBAUE,SAAC,KAAD,CACEiC,GAAG,QACHvB,KAAK,QACLL,KAAK,QACL6B,YAAY,mBACZC,MAAON,EAAOd,MACdhB,UACE+B,EAAOf,OAASgB,EAAQhB,MACpBf,EAAAA,EAAAA,UACA+B,EAAQhB,MACRf,EAAAA,EAAAA,QACAA,EAAAA,EAAAA,SAGR,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,KAAD,CACEU,KAAK,QACL0B,UAAU,MACVrC,UAAWC,EAAAA,EAAAA,kBAQX8B,EAAOf,OAA0B,KAAjBc,EAAOd,MAQvB,IAPA,+BACE,cAAGhB,UAAWwB,EAAd,+CAUR,mBACExB,UACE+B,EAAOd,UAAYe,EAAQf,SACvBhB,EAAAA,EAAAA,eACA+B,EAAQf,SACRhB,EAAAA,EAAAA,aACAA,EAAAA,EAAAA,MANR,sBAUE,SAAC,KAAD,CACEiC,GAAG,WACHvB,KAAK,WACLL,KAAK,WACL6B,YAAY,iBACZnC,UACE+B,EAAOd,UAAYe,EAAQf,SACvBhB,EAAAA,EAAAA,UACA+B,EAAQf,SACRhB,EAAAA,EAAAA,QACAA,EAAAA,EAAAA,SAGR,mBACED,UAAWC,EAAAA,EAAAA,UACXK,KAAK,SACLgC,QAASf,EAHX,UAKE,gBAAKvB,UAAWC,EAAAA,EAAAA,cAMlB,gBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,UACE,SAAC,KAAD,CACEU,KAAK,WACL0B,UAAU,MACVrC,UAAWC,EAAAA,EAAAA,wBAKjB,SAACE,EAAA,EAAD,CAASC,MAAO,SAAUC,KAAI,UAAKkC,EAAAA,EAAL,kBA/FjC,KAmGH,SAAC3C,EAAA,EAAD,CAAcC,SAAS,cAI9B,EChJc,SAAS2C,IACtB,OACE,0BACE,SAACpB,EAAD,KAGL,C,qBCPD,KAAgB,UAAY,gCAAgC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,MAAQ,4BAA4B,SAAW,+BAA+B,SAAW,+BAA+B,YAAc,kCAAkC,aAAe,mCAAmC,KAAO,2BAA2B,SAAW,+BAA+B,UAAY,gCAAgC,SAAW,+BAA+B,gBAAkB,sCAAsC,eAAiB,qCAAqC,aAAe,mCAAmC,UAAY,gCAAgC,UAAY,gCAAgC,QAAU,8B","sources":["webpack://react-team-project/./src/components/AuthNavigate/AuthNavigate.module.css?2dbf","components/AuthNavigate/AuthNavigate.jsx","webpack://react-team-project/./src/components/Buttons/AuthBtn/AuthBtn.module.css?1c8f","components/Buttons/AuthBtn/AuthBtn.jsx","components/Forms/RegisterForm/Validation.js","webpack://react-team-project/./src/components/Forms/LoginForm/LoginForm.module.css?b871","components/Forms/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","webpack://react-team-project/./src/components/Forms/RegisterForm/RegisterForm.module.css?aa5d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"AuthNavigate_navlink__pwLbA\"};","import css from './AuthNavigate.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNavigate({ formType }) {\n  const fillRout = formType === 'register' ? '/login' : '/register';\n  const fillContent = formType === 'register' ? 'Log In' : 'Sign up';\n\n  return (\n    <NavLink className={css.navlink} to={fillRout}>\n      {fillContent}\n    </NavLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AuthBtn_button__TD255\",\"icon\":\"AuthBtn_icon__ah2ei\"};","import css from \"./AuthBtn.module.css\"\n\nexport default function AuthBtn({title, icon}) {\n  return (\n    <button className={css.button} type=\"submit\">\n      {title}\n      <svg className={css.icon}>\n        <use href={icon} />\n      </svg>\n    </button>\n  );\n}\n","import { object, string } from 'yup';\n\nconst registerSchema = object().shape({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(36, 'Too Long!')\n    .required('Required!'),\n  email: string().email('Invalid email!').required('Required!'),\n  password: string()\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .matches(/[^\\w]/, 'Password requires a symbol')\n    .required('Required!'),\n});\n\nexport default registerSchema;\n","// extracted by mini-css-extract-plugin\nexport default {\"logIn\":\"LoginForm_logIn__JGX1M\",\"iconError\":\"LoginForm_iconError__6HPVa\",\"iconOk\":\"LoginForm_iconOk__akNVL\",\"error_message\":\"LoginForm_error_message__cLSIU\",\"success_message\":\"LoginForm_success_message__YvkmU\",\"button_google\":\"LoginForm_button_google__o-aCw\",\"button\":\"LoginForm_button__jf+Ww\",\"bgimages\":\"LoginForm_bgimages__giGbD\"};","// import { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\n\n// import { FcOk } from 'react-icons/fc';\n// import { MdOutlineLogin } from 'react-icons/md';\n// import { BiErrorCircle } from 'react-icons/bi';\nimport registerSchema from '../RegisterForm/Validation';\nimport css from '../RegisterForm/RegisterForm.module.css';\nimport css2 from './LoginForm.module.css';\nimport AuthNavigate from '../../AuthNavigate/AuthNavigate';\nimport AuthBtn from '../../Buttons/AuthBtn/AuthBtn';\nimport icons from '../../../img/icons.svg';\nimport { logIn } from 'redux/auth/authOperations';\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleShowPassword = () => {};\n\n  const handleSubmit = () => {\n    dispatch(\n      logIn({\n        ...initialState,\n      })\n    );\n  };\n\n  return (\n    <>\n      <div className={css.container}>\n        <div className={css2.bgimages}></div>\n\n        <Formik\n          const\n          initialValues={initialState}\n          validationSchema={registerSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, errors, touched }) => (\n            <Form autoComplete=\"off\" className={css.form}>\n              <h1 className={css.title}>Log In</h1>\n\n              <label\n                className={\n                  errors.email && touched.email\n                    ? css.isInvalidLabel\n                    : touched.email\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                Email\n                <Field\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"nadiia@gmail.com\"\n                  value={values.email}\n                  className={\n                    errors.email && touched.email\n                      ? css.isInvalid\n                      : touched.email\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n\n                  {/* {touched.email && errors.email ? (\n                    <BiErrorCircle className={css2.iconError} />\n                  ) : (\n                    ''\n                  )} */}\n                  {!errors.email && values.email !== '' ? (\n                    <>\n                      <p className={css2.success_message}>\n                        This is an CORRECT email\n                      </p>\n                      {/* <FcOk className={css2.iconOk} /> */}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </label>\n              <label\n                className={\n                  errors.password && touched.password\n                    ? css.isInvalidLabel\n                    : touched.password\n                    ? css.isValidLabel\n                    : css.label\n                }\n              >\n                Password\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter password\"\n                  className={\n                    errors.password && touched.password\n                      ? css.isInvalid\n                      : touched.password\n                      ? css.isValid\n                      : css.input\n                  }\n                />\n                <button\n                  className={css.btnToggle}\n                  type=\"button\"\n                  onClick={handleShowPassword}\n                >\n                  <div className={css.spanIcon}>\n                    {\n                      // icon here\n                    }\n                  </div>\n                </button>\n                <div className={css.feedback}>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.invalidFeedback}\n                  ></ErrorMessage>\n                </div>\n              </label>\n\n              <AuthBtn title={'Log In'} icon={`${icons}#log-in-01`} />\n            </Form>\n          )}\n        </Formik>\n        <AuthNavigate formType=\"login\" />\n      </div>\n    </>\n  );\n};\n","import  {LoginForm}  from 'components/Forms/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__Xyyo6\",\"form\":\"RegisterForm_form__Q5Jhf\",\"title\":\"RegisterForm_title__GYy4A\",\"label\":\"RegisterForm_label__oS2A1\",\"input\":\"RegisterForm_input__ri5a0\",\"bgImages\":\"RegisterForm_bgImages__k30sU\",\"bgimages\":\"RegisterForm_bgimages__J91Fr\",\"bgImagesMsg\":\"RegisterForm_bgImagesMsg__RE-a5\",\"bgImagesText\":\"RegisterForm_bgImagesText__6+zb7\",\"span\":\"RegisterForm_span__AeXsn\",\"spanIcon\":\"RegisterForm_spanIcon__yiKzN\",\"labelText\":\"RegisterForm_labelText__LNKe7\",\"feedback\":\"RegisterForm_feedback__eMOAQ\",\"invalidFeedback\":\"RegisterForm_invalidFeedback__R8sfQ\",\"isInvalidLabel\":\"RegisterForm_isInvalidLabel__iuJAM\",\"isValidLabel\":\"RegisterForm_isValidLabel__YKGHl\",\"isInvalid\":\"RegisterForm_isInvalid__VxQrK\",\"btnToggle\":\"RegisterForm_btnToggle__ayAHo\",\"isValid\":\"RegisterForm_isValid__pk6z3\"};"],"names":["AuthNavigate","formType","fillRout","fillContent","className","css","to","AuthBtn","title","icon","type","href","registerSchema","object","shape","name","string","min","max","required","email","password","matches","initialState","LoginForm","dispatch","useDispatch","handleShowPassword","css2","const","initialValues","validationSchema","onSubmit","logIn","values","errors","touched","autoComplete","id","placeholder","value","component","onClick","icons","LoginPage"],"sourceRoot":""}