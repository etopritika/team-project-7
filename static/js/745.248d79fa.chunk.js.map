{"version":3,"file":"static/js/745.248d79fa.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/AuthNavigate/AuthNavigate.module.css?2dbf","components/AuthNavigate/AuthNavigate.jsx","webpack://react-team-project/./src/components/Buttons/AuthBtn/AuthBtn.module.css?1c8f","components/Buttons/AuthBtn/AuthBtn.jsx","components/Forms/LoginForm/loginFormValidation.js","webpack://react-team-project/./src/components/Forms/LoginForm/LoginForm.module.css?b871","components/Forms/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","webpack://react-team-project/./src/components/Forms/RegisterForm/RegisterForm.module.css?aa5d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"AuthNavigate_navlink__pwLbA\"};","import css from './AuthNavigate.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport default function AuthNavigate({ formType }) {\n  const fillRout = formType === 'register' ? '/login' : '/register';\n  const fillContent = formType === 'register' ? 'Log In' : 'Sign up';\n\n  return (\n    <NavLink className={css.navlink} to={fillRout}>\n      {fillContent}\n    </NavLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AuthBtn_button__TD255\",\"icon\":\"AuthBtn_icon__ah2ei\"};","import css from \"./AuthBtn.module.css\"\n\nexport default function AuthBtn({title, icon}) {\n  return (\n    <button className={css.button} type=\"submit\">\n      {title}\n      <svg className={css.icon}>\n        <use href={icon} />\n      </svg>\n    </button>\n  );\n}\n","import { object, string } from 'yup';\n\nconst loginSchema = object().shape({\n  email: string()\n    .email('This is an ERROR email')\n    .matches(/^[a-zA-Z0-9@.]+$/, 'Email must contain only Latin characters')\n    .required('Email is required'),\n  password: string()\n    .required('Password is required')\n    .min(8, 'Password must be at least 8 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport default loginSchema;\n","// extracted by mini-css-extract-plugin\nexport default {\"logIn\":\"LoginForm_logIn__JGX1M\",\"iconError\":\"LoginForm_iconError__6HPVa\",\"iconOk\":\"LoginForm_iconOk__akNVL\",\"error_message\":\"LoginForm_error_message__cLSIU\",\"success_message\":\"LoginForm_success_message__YvkmU\",\"button_google\":\"LoginForm_button_google__o-aCw\",\"button\":\"LoginForm_button__jf+Ww\",\"bgimages\":\"LoginForm_bgimages__giGbD\",\"spinner\":\"LoginForm_spinner__7Aya+\",\"hidden\":\"LoginForm_hidden__Ad1Q6\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport loginSchema from './loginFormValidation';\nimport css from '../RegisterForm/RegisterForm.module.css';\nimport css2 from './LoginForm.module.css';\nimport AuthNavigate from '../../AuthNavigate/AuthNavigate';\nimport AuthBtn from '../../Buttons/AuthBtn/AuthBtn';\nimport icons from '../../../img/icons.svg';\nimport { logIn } from 'redux/auth/authOperations';\nimport Spinner from '../../../components/Spinner/Spinner';\n// from react-icons\nimport {\n  AiFillEye,\n  AiFillEyeInvisible,\n  AiOutlineCheckCircle,\n  AiOutlineExclamationCircle,\n} from 'react-icons/ai';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [type, setType] = useState('password');\n  const [icon, setIcon] = useState(<AiFillEyeInvisible />);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleShowPassword = () => {\n    if (type === 'password') {\n      setIcon(<AiFillEye />);\n      setType('text');\n    } else {\n      setIcon(<AiFillEyeInvisible />);\n      setType('password');\n    }\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    setIsLoading(true);\n    try {\n      const response = await dispatch(logIn(values));\n      if (!response.hasOwnProperty('error')) {\n        //console.log('Login successful:', response);\n        await navigate('/user/calendar');\n        resetForm();\n      } else {\n        console.error('Login rejected:', response);\n      }\n    } catch (error) {\n      console.error('Login rejected:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className={css.container}>\n          <div className={css2.bgimages}></div>\n\n          <Formik\n            const\n            initialValues={INITIAL_STATE}\n            validationSchema={loginSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ values, errors, touched }) => (\n              <Form autoComplete=\"off\" className={css.form}>\n                <h1 className={css.title}>Log In</h1>\n\n                <label\n                  className={\n                    errors.email && touched.email\n                      ? css.isInvalidLabel\n                      : touched.email\n                      ? css.isValidLabel\n                      : css.label\n                  }\n                >\n                  <p className={css.labelText}>Email</p>\n                  <Field\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={values.email}\n                    className={\n                      errors.email && touched.email\n                        ? css.isInvalid\n                        : touched.email\n                        ? css.isValid\n                        : css.input\n                    }\n                  />\n                  {touched.email && (\n                    <span className={css.validationIcon}>\n                      {errors.email ? (\n                        <AiOutlineExclamationCircle\n                          className={css.invalidIcon}\n                        />\n                      ) : (\n                        <AiOutlineCheckCircle className={css.validIcon} />\n                      )}\n                    </span>\n                  )}\n                  <div className={css.feedback}>\n                    {touched.email && !errors.email ? (\n                      <div className={css.validFeedback}>\n                        This is an CORRECT email\n                      </div>\n                    ) : (\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className={css.invalidFeedback}\n                      ></ErrorMessage>\n                    )}\n                  </div>\n                </label>\n                <label\n                  className={\n                    errors.password && touched.password\n                      ? css.isInvalidLabel\n                      : touched.password\n                      ? css.isValidLabel\n                      : css.label\n                  }\n                >\n                  <p className={css.labelText}>Password</p>\n                  <Field\n                    id=\"password\"\n                    name=\"password\"\n                    type={type}\n                    placeholder=\"Enter password\"\n                    className={\n                      errors.password && touched.password\n                        ? css.isInvalid\n                        : touched.password\n                        ? css.isValid\n                        : css.input\n                    }\n                  />\n                  <button\n                    className={css.btnToggle}\n                    type=\"button\"\n                    onClick={handleShowPassword}\n                  >\n                    <div className={css.spanIcon}>{icon}</div>\n                  </button>\n                  <div className={css.feedback}>\n                    <ErrorMessage\n                      name=\"password\"\n                      component=\"div\"\n                      className={css.invalidFeedback}\n                    ></ErrorMessage>\n                  </div>\n                </label>\n\n                <AuthBtn title={'Log In'} icon={`${icons}#log-in-01`} />\n              </Form>\n            )}\n          </Formik>\n          <AuthNavigate formType=\"login\" />\n        </div>\n      )}\n    </>\n  );\n};\n","import  {LoginForm}  from 'components/Forms/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__Xyyo6\",\"form\":\"RegisterForm_form__Q5Jhf\",\"title\":\"RegisterForm_title__GYy4A\",\"label\":\"RegisterForm_label__oS2A1\",\"input\":\"RegisterForm_input__ri5a0\",\"bgImages\":\"RegisterForm_bgImages__k30sU\",\"bgimages\":\"RegisterForm_bgimages__J91Fr\",\"bgImagesMsg\":\"RegisterForm_bgImagesMsg__RE-a5\",\"bgImagesText\":\"RegisterForm_bgImagesText__6+zb7\",\"span\":\"RegisterForm_span__AeXsn\",\"spanIcon\":\"RegisterForm_spanIcon__yiKzN\",\"labelText\":\"RegisterForm_labelText__LNKe7\",\"feedback\":\"RegisterForm_feedback__eMOAQ\",\"invalidFeedback\":\"RegisterForm_invalidFeedback__R8sfQ\",\"validFeedback\":\"RegisterForm_validFeedback__G7iC1\",\"isInvalidLabel\":\"RegisterForm_isInvalidLabel__iuJAM\",\"isValidLabel\":\"RegisterForm_isValidLabel__YKGHl\",\"isValid\":\"RegisterForm_isValid__pk6z3\",\"isInvalid\":\"RegisterForm_isInvalid__VxQrK\",\"validationIcon\":\"RegisterForm_validationIcon__B2CxV\",\"validIcon\":\"RegisterForm_validIcon__sLsPJ\",\"invalidIcon\":\"RegisterForm_invalidIcon__c+hns\",\"btnToggle\":\"RegisterForm_btnToggle__ayAHo\",\"spinner\":\"RegisterForm_spinner__89A-v\",\"hidden\":\"RegisterForm_hidden__O8tKU\"};"],"names":["AuthNavigate","_ref","formType","fillRout","fillContent","_jsx","NavLink","className","css","to","children","AuthBtn","title","icon","_jsxs","type","href","object","shape","email","string","matches","required","password","min","INITIAL_STATE","LoginForm","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","setType","_useState3","AiFillEyeInvisible","_useState4","setIcon","_useState5","_useState6","isLoading","setIsLoading","handleShowPassword","AiFillEye","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","wrap","_context","prev","next","logIn","sent","hasOwnProperty","console","error","t0","finish","stop","_x","_x2","apply","arguments","_Fragment","Spinner","css2","Formik","const","initialValues","validationSchema","loginSchema","onSubmit","_ref3","errors","touched","Form","autoComplete","Field","id","name","placeholder","value","AiOutlineExclamationCircle","AiOutlineCheckCircle","ErrorMessage","component","onClick","concat","icons","LoginPage"],"sourceRoot":""}